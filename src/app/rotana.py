
import torch
from diffusers import StableDiffusionPipeline
from PIL import Image
from IPython.display import display

# 1. Choose your Stable Diffusion model
model_id = "runwayml/stable-diffusion-v1-5"  # Or another model ID

# 2. GPU setup
if torch.cuda.is_available():
    device = "cuda"
    print("GPU detected. Using CUDA.")
else:
    device = "cpu"
    print("No GPU detected. Using CPU.")

# 3. Load the pipeline and remove the safety checker
pipeline = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16)
pipeline.safety_checker = None  # Remove safety checker
pipeline = pipeline.to(device)

# 4. Disclaimer function
def display_disclaimer():
    disclaimer = """
    ************************************************************************
    WARNING: Rotona is an UNRESTRICTED image generation tool. It can generate images of ANY kind, including potentially offensive, disturbing, or illegal content.

    You are SOLELY responsible for the content you generate. The developers of Rotona are NOT responsible for any misuse of this tool.

    By using Rotona, you acknowledge and agree that you understand the risks associated with unrestricted image generation and that you will NOT use Rotona to create or distribute illegal or harmful content.

    Use Rotona responsibly and ethically.  Consult legal counsel if you have any questions about the legality of the content you intend to generate.

    The developers of Rotona disclaim all liability for any content generated by this tool.
    ************************************************************************
    """
    print(disclaimer)

# 5. Image generation function
def generate_image(prompt):
    try:
        image = pipeline(prompt).images[0]
        return image
    except Exception as e:
        print(f"Error during image generation: {e}")
        return None

# 6. Main loop
while True:
    display_disclaimer()  # Display disclaimer every time

    user_prompt = input("Enter your prompt (or type 'exit' to quit): ")

    if user_prompt.lower() == 'exit':
        break

    generated_image = generate_image(user_prompt)

    if generated_image:
        display(generated_image)

        try:
            filename = "generated_image.png"  # Or make the filename dynamic
            generated_image.save(filename)
            print(f"Image saved as {filename}")
        except Exception as e:
            print(f"Error saving image: {e}")
    else:
        print("Image generation failed. Please check your prompt.")
